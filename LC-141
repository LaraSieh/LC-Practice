141. Linked List Cycle
 Given a linked list, determine if it has a cycle in it. 

Follow up:
 Can you solve it without using extra space? 

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    bool hasCycle(ListNode *head) {
        ListNode *one=head, *two=head;
        
        while (two && two->next) {
            two = two->next->next;
            one = one->next;
            if (one == two) return true;
        }
        
        return false;
        
    }
};
