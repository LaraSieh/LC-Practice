// 191. Number of 1 Bits
Write a function that takes an unsigned integer and returns the number of ’1' bits it has (also known as the Hamming weight).

For example, the 32-bit integer ’11' has binary representation 00000000000000000000000000001011, so the function should return 3.

// straightforward method, 

class Solution {
public:
    int hammingWeight(uint32_t n) {
        int count = 0;
        while (n) {
            if (n & 0x1) ++count;
            n = n >> 1;
        } 
        return count;
    }
};

// Brian Kernighan’s Algorithm
// http://www.geeksforgeeks.org/count-set-bits-in-an-integer/
int hammingWeight(uint32_t n) {
    int count  = 0;
    while (n) {
        n = n & (n - 1);
        count++;
    }
    return count;
}
