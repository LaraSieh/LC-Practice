//First Missing Positive
// Given an unsorted integer array, find the first missing positive integer. 
// For example,
//  Given [1,2,0] return 3, and [3,4,-1,1] return 2. 

// Your algorithm should run in O(n) time and uses constant space. 


int firstMissingPositive(vector<int>& nums) {
        size_t len = nums.size();
        
        for (size_t i=0; i<len;) {
            if (nums[i] == i+1 
                || nums[i] <= 0 
                || nums[i] > len 
                || nums[nums[i]-1] == nums[i]) {
                ++i;
            } else {
                int temp = nums[i];
                nums[i] = nums[temp-1];
                nums[temp-1] = temp;
            }
        }
        
        for (size_t i=0; i<len; ++i) {
            if (nums[i] != i+1 || nums[i] <=0 || nums[i] > len) 
                return (i+1);
        }
        
        return len+1; 
    }
