# Contains Duplicate III
 
// Given an array of integers, find out whether there are two distinct indices i and j in the array 
// such that the difference between nums[i] and nums[j] is at most t and the difference between i and j is at most k. 

class Solution {
public:
    bool containsNearbyAlmostDuplicate(vector<int>& nums, int k, int t) {
        vector<pair<long,int>> v;
        for (int i=0; i<nums.size(); ++i) {
            v.push_back(pair<long,int>((long)nums[i],i));
        }
        sort(v.begin(), v.end(), 
            [](pair<long,int> i, pair<long,int>j) {
                return i.first < j.first; }); 
        
        for (int i=0,j; i<v.size(); ++i) {
            j = i+1;
            while (j<v.size() && v[j].first-v[i].first <= t) {
                if (abs(v[j].second - v[i].second) <= k ) return true;
                ++j;
            }
        }
        
        return false;
    }
};
