128. Longest Consecutive Sequence
Given an unsorted array of integers, find the length of the longest consecutive elements sequence.

For example,
Given [100, 4, 200, 1, 3, 2],
The longest consecutive elements sequence is [1, 2, 3, 4]. Return its length: 4.

Your algorithm should run in O(n) complexity.



// first nlog(n) mehtod, sorting first
class Solution {
public:
    int longestConsecutive(vector<int>& nums) {
        sort(nums.begin(), nums.end());
        
        int consecutive=1, count=1;
        for (int i=1; i<nums.size(); ++i) {
            if (nums[i] == nums[i-1]+1) {
                ++count;
            } else if (nums[i] != nums[i-1]) {
                consecutive = max(consecutive,count);
                count=1;
            }
        }
        
        consecutive=max(consecutive,count);
        return consecutive;
    }
};

// o(n), copied from discussion. clean but the real runtime is slower:)
class Solution {
public:
    int longestConsecutive(vector<int>& nums) {
        unordered_map<int,int> map;
        
        int consecutive=0;
        for (int num : nums) {
            if (map[num]) continue;
            map[num] = 
            map[num-map[num-1]] =
            map[num+map[num+1]] =
            map[num-1]+map[num+1]+1;
            
            consecutive = max(consecutive,map[num]);
        }
        return consecutive;
  }
