257. Binary Tree Paths
Given a binary tree, return all root-to-leaf paths.

For example, given the following binary tree:

   1
 /   \
2     3
 \
  5
All root-to-leaf paths are:

["1->2->5", "1->3"]

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<string> binaryTreePaths(TreeNode* root) {
    // if (root==NULL) return vector<string>{};
       vector<string> paths;
       string path;
       
       if (root==NULL) return paths;
       TreePathSub(root, paths, path);
       return paths;
    }
    
    void TreePathSub(TreeNode *node, vector<string>& paths, string path) {
        path += to_string(node->val);
        if (!node->left && !node->right) {
            paths.push_back(path);
            return;
        }
        path += "->";
        if (node->left) {
            TreePathSub(node->left,paths,path);
        }
        if (node->right) {
           TreePathSub(node->right,paths,path); 
        }
        
    }
};
