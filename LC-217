217. Contains Duplicate
Given an array of integers, find if the array contains any duplicates. Your 
function should return true if any value appears at least twice in the array, 
and it should return false if every element is distinct. 

// using map, 52ms though n but i think map actually takes time
class Solution {
public:
    bool containsDuplicate(vector<int>& nums) {
        unordered_map<int,int> exist;
        
        for (int i : nums) {
            if (exist[i] != 0) return true;
            exist[i] = 1;
        }
        return false;
    }
};

// sort nlog(n) 40ms, the con is it changes the order of nums
class Solution {
public:
    bool containsDuplicate(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        
        for (int i=1; i<nums.size(); ++i) {
            if (nums[i-1] == nums[i]) return true;
        }
        
        return false;
      }
  };
  
// using bits,copied
public class Solution {
public boolean containsDuplicate(int[] nums) {
    byte[] mark = new byte[150000];
    for (int i : nums) {
        int j = i/8;
        int k = i%8;
        int check = 1<<k;
        if ((mark[j] & check) != 0) {
            return true;
        }
        mark[j]|=check;
    }
    return false;
  }
}

