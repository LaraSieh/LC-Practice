274. H-Index
Given an array of citations (each citation is a non-negative integer) of a researcher, write a function to compute the researcher's h-index.
According to the definition of h-index on Wikipedia: "A scientist has index h if h of his/her N papers have at least h citations each, and the other N âˆ’ h papers have no more than h citations each."
For example, given citations = [3, 0, 6, 1, 5], which means the researcher has 5 papers in total and each of them had received 3, 0, 6, 1, 5 citations respectively. Since the researcher has 3 papers with at least 3 citations each and the remaining two with no more than 3 citations each, his h-index is 3.
Note: If there are several possible values for h, the maximum one is taken as the h-index.

// 33ms
class Solution {
public:
    int hIndex(vector<int>& citations) {
        int n = citations.size();
        vector<int> greater(n+1,0);
        
        for (int i=0; i<n; ++i) {
            for (int j=0;j<=min(n,citations[i]);++j) {
                ++greater[j];
            }
        }
        for (int i=n; i>=0; --i) {
            if (greater[i]>=i) return i; 
        }
        return 0;
    }
};


// 20ms, sort version
class Solution {
public:
    int hIndex(vector<int>& citations) {
        sort(citations.begin(), citations.end());
        
        size_t n = citations.size();
        size_t h = 0;
        int    prev = 0;
        for (size_t i=0; i<n; ++i) {
            if (citations[i] >= (n-i) && prev <= n-i) {
                h = n-i;
            }
            prev = citations[i];
        }
        
        return h;
    }
};
