111. Minimum Depth of Binary Tree
Given a binary tree, find its minimum depth.

The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int minDepth(TreeNode* root) {
        if (root==NULL) return 0;
        if (root->left==NULL && root->right==NULL) return 1;
    
        int depth=INT_MAX;    //if putting this at beginning of function, it will be 4ms slower!
        if (root->left) 
            depth=minDepth(root->left);
        if (root->right) 
            depth=min(minDepth(root->right),depth);
            
        return depth+1;
    }
};
